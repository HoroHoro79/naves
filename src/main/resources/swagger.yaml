openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
- url: http://localhost:8080
  description: Generated server url
paths:
  /api/naves/v1/:
    get:
      tags:
      - naves-controller
      operationId: getNaves
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Naves'
    put:
      tags:
      - naves-controller
      operationId: putNave
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NavesPutRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Naves'
    post:
      tags:
      - naves-controller
      operationId: postNave
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NavesPostRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Naves'
  /api/security/v1/token:
    get:
      tags:
      - security-controller
      operationId: getCsrfToken
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CsrfToken'
  /api/security/v1/credentials:
    get:
      tags:
      - security-controller
      operationId: getCredentials
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: string
  /api/naves/v1/{id}:
    get:
      tags:
      - naves-controller
      operationId: getNaveById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Naves'
    delete:
      tags:
      - naves-controller
      operationId: deleteNave
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
  /api/naves/v1/status:
    get:
      tags:
      - naves-controller
      operationId: getStatus
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: string
  /api/naves/v1/paginacion:
    get:
      tags:
      - naves-controller
      operationId: getNavesPage
      parameters:
      - name: pageable
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/Pageable'
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Naves'
  /api/naves/v1/filtros:
    get:
      tags:
      - naves-controller
      operationId: getByFiltros
      parameters:
      - name: nombre
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Naves'
components:
  schemas:
    NavesPutRequest:
      required:
      - id
      - nombre
      type: object
      properties:
        id:
          type: integer
          description: ID de la nave
          format: int32
          example: 1
        nombre:
          type: string
          description: Nombre de la nave
          example: Millenium Falcon
    Naves:
      type: object
      properties:
        id:
          type: integer
          format: int32
        nombre:
          type: string
        fechaAlta:
          type: string
          format: date
        fechaModif:
          type: string
          format: date
        fechaBaja:
          type: string
          format: date
    NavesPostRequest:
      required:
      - nombre
      type: object
      properties:
        nombre:
          type: string
          description: Nombre de la nave
          example: Ghost
    CsrfToken:
      type: object
      properties:
        token:
          type: string
        headerName:
          type: string
        parameterName:
          type: string
    Pageable:
      type: object
      properties:
        page:
          minimum: 0
          type: integer
          format: int32
        size:
          minimum: 1
          type: integer
          format: int32
        sort:
          type: array
          items:
            type: string
